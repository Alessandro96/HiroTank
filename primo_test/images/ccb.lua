-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["ccb"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   254.5, 12.5  ,  248.5, 7.5  ,  259.5, 3.5  ,  261.5, 7.5  ,  260.5, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -191.5, -1.5  ,  -143.5, 13.5  ,  -190.5, 15.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   164.5, 12.5  ,  194.5, -1.5  ,  193.5, 15.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   232.5, -3.5  ,  256.5, 1.5  ,  259.5, 3.5  ,  248.5, 7.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -255.5, 8.5  ,  -250.5, -2.5  ,  -251.5, 6.5  ,  -254.5, 9.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -250.5, -2.5  ,  -244.5, -8.5  ,  -236.5, -12.5  ,  -242.5, 1.5  ,  -244.5, 4.5  ,  -251.5, 6.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   256.5, -0.5  ,  232.5, -3.5  ,  155.5, -16.5  ,  231.5, -15.5  ,  242.5, -14.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   132.5, 13.5  ,  109.5, 12.5  ,  194.5, -1.5  ,  164.5, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -242.5, 1.5  ,  -236.5, -12.5  ,  -228.5, -2.5  ,  -240.5, 2.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -191.5, -1.5  ,  -121.5, 12.5  ,  -143.5, 13.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   232.5, -3.5  ,  256.5, -0.5  ,  256.5, 1.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   78.5, 12.5  ,  133.5, -15.5  ,  155.5, -16.5  ,  194.5, -1.5  ,  109.5, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -191.5, -1.5  ,  -162.5, -16.5  ,  -91.5, -16.5  ,  -71.5, -15.5  ,  -76.5, 12.5  ,  -121.5, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -118.5, -16.5  ,  -162.5, -16.5  ,  -136.5, -17.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -162.5, -16.5  ,  -191.5, -1.5  ,  -228.5, -2.5  ,  -236.5, -12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -71.5, -15.5  ,  3.5, -16.5  ,  13.5, 13.5  ,  -50.5, 13.5  ,  -76.5, 12.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   27.5, -15.5  ,  48.5, 12.5  ,  13.5, 13.5  ,  3.5, -16.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   133.5, -15.5  ,  78.5, 12.5  ,  48.5, 12.5  ,  27.5, -15.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   155.5, -16.5  ,  201.5, -2.5  ,  194.5, -1.5  }
                    }
                     ,
                    {
                    pe_fixture_id = "ccb", density = 0.3, friction = 0, bounce = 0, isSensor=true, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   155.5, -16.5  ,  232.5, -3.5  ,  201.5, -2.5  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

