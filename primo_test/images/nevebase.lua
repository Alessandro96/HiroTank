-- This file is for use with Corona(R) SDK
--
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = (require "shapedefs").physicsData(scaleFactor)
--			local shape = display.newImage("objectname.png")
--			physics.addBody( shape, physicsData:get("objectname") )
--

-- copy needed functions to local scope
local unpack = unpack
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
	local physics = { data =
	{ 
		
		["nevebase"] = {
                    
                    
                    
                    
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -909, -497  ,  -899, -435  ,  -899, -354  ,  -909, -345  ,  -990, -343  ,  -1000, -353  ,  -1000, -435  ,  -990, -497  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   1000, 500  ,  -1000, 500  ,  -909, -41  ,  1000, -41  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -899, -253  ,  -909, -244  ,  -909, -343  ,  -899, -334  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -899, -152  ,  -909, -143  ,  -909, -242  ,  -899, -233  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -899, -51  ,  -909, -41  ,  -909, -141  ,  -899, -132  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -990, -141  ,  -991, -41  ,  -1000, -50  ,  -1000, -132  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -990, -242  ,  -990, -141  ,  -1000, -151  ,  -1000, -233  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -990, -343  ,  -909, -345  ,  -990, -242  ,  -1000, -252  ,  -1000, -334  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -909, -345  ,  -990, -141  ,  -990, -242  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -909, -345  ,  -909, -244  ,  -991, -41  ,  -990, -141  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -1000, 500  ,  -991, -41  ,  -909, -244  ,  -909, -41  }
                    }
                     ,
                    {
                    pe_fixture_id = "nevebase", density = 2, friction = 12, bounce = 0, 
                    filter = { categoryBits = 1, maskBits = 65535, groupIndex = 0 },
                    shape = {   -991, -41  ,  -1000, 500  ,  -1000, -41  }
                    }
                    
                    
                    
		}
		
	} }

        -- apply scale factor
        local s = scale or 1.0
        for bi,body in pairs(physics.data) do
                for fi,fixture in ipairs(body) do
                    if(fixture.shape) then
                        for ci,coordinate in ipairs(fixture.shape) do
                            fixture.shape[ci] = s * coordinate
                        end
                    else
                        fixture.radius = s * fixture.radius
                    end
                end
        end
	
	function physics:get(name)
		return unpack(self.data[name])
	end

	function physics:getFixtureId(name, index)
                return self.data[name][index].pe_fixture_id
	end
	
	return physics;
end

return M

